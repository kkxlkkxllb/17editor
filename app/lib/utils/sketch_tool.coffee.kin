Kinetic = require("lib/utils/kinetic")

SketchTool =
	initSketch: (container) ->
		self = this
		$container = $("#" + container)
		$container.before require("views/widgets/sketch_control")()
		@stage = new Kinetic.Stage
			container: container
			width: 600
			height: 300
		layer = new Kinetic.Layer()

		@stage.add layer

		$container.on "dragover dragenter drop", (e) ->
			e.stopPropagation()
			e.preventDefault()
		$container.on "drop", (e) ->
			e = e.originalEvent
			files = e.dataTransfer.files
			fr = new FileReader()
			fr.readAsDataURL(files[0])
			img = new Kinetic.Image
				draggable: true
			img.on "mouseover", ->
				$container.css "cursor": "move"
			img.on "mouseout", ->
				$container.css "cursor": "default"
			layer.add img
			fr.onload = (ev) ->
				imgObj = new Image()
				imgObj.src = ev.target.result
				img.setImage imgObj
				layer.draw()

			# touchmove: ->
			# 	if @dragging
			# 		touch = @touches[0]
			# 		@lineCap = 'round'
			# 		@lineJoin = 'round'
			# 		@fillStyle = @strokeStyle
			# 		@lineWidth = 10
			# 		@beginPath()
			# 		@moveTo touch.ox, touch.oy
			# 		@lineTo touch.x, touch.y
			# 		@stroke()


	getSketchData: ->
		@sketch.canvas.toDataURL("image/png")
	setSketchData: (data) ->
		@sketch.clear()
		if data
			img = new Image()
			img.onload = =>
				@sketch.drawImage(img, 0, 0)
			img.src = data
	clearSketch: (e) ->
		@sketch.clear()
	setPencil: (e) ->
		@sketch.globalCompositeOperation = "source-over"
		@sketch.strokeStyle = "#000"
		$(e.currentTarget).addClass("active").siblings().removeClass "active"
	setEraser: (e) ->
		@sketch.globalCompositeOperation = "copy"
		@sketch.strokeStyle = "transparent"
		$(e.currentTarget).addClass("active").siblings().removeClass "active"


module?.exports = SketchTool
